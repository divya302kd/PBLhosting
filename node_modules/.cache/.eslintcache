[{"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\index.js":"1","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\App.js":"2","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\serviceWorker.js":"3","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\Home.js":"4","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Dashboard.js":"5","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\NewHeader.js":"6","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\PostProjectModal.js":"7","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\Grid.js":"8","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Signup.js":"9","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Login.js":"10","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\PostProjectForm.js":"11","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\ProfileForm.js":"12","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\ToastMsg.js":"13","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\DashboardLanding.js":"14","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\admin\\AdminDashbboard.js":"15","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Categories.js":"16","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\XHRUtil.js":"17","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\search\\SearchComponent.js":"18","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\project\\ProjectCard.js":"19","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\project\\Comments.js":"20","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\ScrollToTop.js":"21"},{"size":491,"mtime":1696825368071,"results":"22","hashOfConfig":"23"},{"size":1189,"mtime":1698856673520,"results":"24","hashOfConfig":"23"},{"size":5140,"mtime":1696825368096,"results":"25","hashOfConfig":"23"},{"size":7295,"mtime":1698854681236,"results":"26","hashOfConfig":"23"},{"size":5305,"mtime":1698881186575,"results":"27","hashOfConfig":"23"},{"size":2459,"mtime":1698854681244,"results":"28","hashOfConfig":"23"},{"size":977,"mtime":1696825368094,"results":"29","hashOfConfig":"23"},{"size":3367,"mtime":1698854681226,"results":"30","hashOfConfig":"23"},{"size":13359,"mtime":1698854681305,"results":"31","hashOfConfig":"23"},{"size":9855,"mtime":1698857837303,"results":"32","hashOfConfig":"23"},{"size":10708,"mtime":1698856660587,"results":"33","hashOfConfig":"23"},{"size":6864,"mtime":1698854681301,"results":"34","hashOfConfig":"23"},{"size":358,"mtime":1696825367941,"results":"35","hashOfConfig":"23"},{"size":4215,"mtime":1698854681290,"results":"36","hashOfConfig":"23"},{"size":1998,"mtime":1698854681249,"results":"37","hashOfConfig":"23"},{"size":150,"mtime":1698959101047,"results":"38","hashOfConfig":"23"},{"size":2311,"mtime":1698854681246,"results":"39","hashOfConfig":"23"},{"size":2007,"mtime":1698854681267,"results":"40","hashOfConfig":"23"},{"size":3242,"mtime":1698854681261,"results":"41","hashOfConfig":"23"},{"size":4462,"mtime":1698854681259,"results":"42","hashOfConfig":"23"},{"size":270,"mtime":1698856660589,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1wqkpbs",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"47"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"47"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\index.js",[],[],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\App.js",["118"],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\serviceWorker.js",[],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\Home.js",["119","120","121","122","123","124","125","126","127","128","129","130"],[],"import React, {useState, useEffect} from 'react';\r\nimport NewHeader from \"./NewHeader\";\r\nimport {Card, Carousel, Col, Row} from \"react-bootstrap\";\r\n\r\nimport logo from '../project-images/nwmsu-admin-image.jpg'\r\n\r\n\r\nconst Home = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [showReadMorePopup, setShowReadMorePopup] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n    const fetchData = async (pageNumber) => {\r\n        try {\r\n            const response = await fetch(`/blog/page/get`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    pageNumber: pageNumber - 1,\r\n                    noOfRecords: 6,\r\n                    userName: \"all\",\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPosts(data.response);\r\n                setTotalPages(data.totalPages);\r\n            } else {\r\n                console.error('Error fetching data:', response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData(currentPage);\r\n    }, [currentPage]);\r\n    const prevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const goToPage = (pageNumber) => {\r\n        if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n            setCurrentPage(pageNumber);\r\n        }\r\n    };\r\n\r\n    const limitWords = (text, limit) => {\r\n        const words = text.split(' ');\r\n        if (words.length > limit) {\r\n            return words.slice(0, limit).join(' ') + '...';\r\n        }\r\n        return text;\r\n    };\r\n    const limitLetters = (text, limit) => {\r\n\r\n        if (text.length > limit) {\r\n            text = text.substring(0, limit);\r\n            text = text + ' ...'\r\n        }\r\n        return text;\r\n    };\r\n    const filteredPosts = posts.filter((post) =>\r\n        post.sub.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        post.desc.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    const startPage = Math.max(1, currentPage - Math.floor(5 / 2));\r\n    const endPage = Math.min(totalPages, startPage + 5 - 1);\r\n    const pageNumbers = Array.from({length: endPage - startPage + 1}, (_, index) => startPage + index);\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <NewHeader></NewHeader>\r\n            <div className=\"container-fluid\">\r\n                <Carousel>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"w-100\"\r\n                            src={logo}\r\n                            width='400px'\r\n                            height='800px'\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </div>\r\n            {/*<div className=\"container-fluid\" style={{marginTop: '90px'}}>\r\n                <div className=\"row\">\r\n                    {filteredPosts.map((post) => (\r\n\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"thumbnail\">\r\n\r\n                                <div className=\"caption\">\r\n                                     <img src={author} alt=\"author\" width={50} height={50}/>\r\n                                    <h3>{limitLetters(post.sub, 40)}</h3>\r\n                                    <p>{limitLetters(post.desc, 40)}</p>\r\n\r\n                                     <a href=\"#\"><span class=\"badge\">Technology</span></a>\r\n                                    <p style={{position: 'relative'}}><a href=\"#\" className=\"btn btn-outline-primary\"\r\n                                                                         role=\"button\">Read More</a></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6 col-md-offset-5\">\r\n                        <nav>\r\n                            <ul className=\"pagination\">\r\n                                <li aria-label=\"Previous\" onClick={prevPage} disabled={currentPage == 1}>\r\n                                    <a>\r\n                                        <span aria-hidden=\"true\">&laquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                                 {Array.from({ length: 5 }, (_, index) => (\r\n                   index+currentPage <= totalPages &&\r\n                    <li><a key={index} onClick={() => goToPage(currentPage + 1)} className={currentPage === index + 1 ? 'active' : ''} href=\"#\"> {index + currentPage}</a></li>\r\n                  \r\n              ))}\r\n                                {pageNumbers.map((pageNumber) => (\r\n                                    <li className={currentPage === pageNumber ? 'active' : ''}><a key={pageNumber}\r\n                                                                                                  onClick={() => goToPage(pageNumber)}\r\n                                                                                                  href=\"#\"> {pageNumber}</a>\r\n                                    </li>\r\n                                ))}\r\n                                <li>\r\n                                    <a aria-label=\"Next\" onClick={nextPage} disabled={currentPage === totalPages}>\r\n                                        <span aria-hidden=\"true\">&raquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>*/}\r\n            <div className=\"container-fluid p-5\">\r\n                <h3 className=\"nwthemecolor\"> Trending Projects</h3>\r\n                <Row xs={1} md={2} className=\"g-4\">\r\n                    {posts.map((post, index) => (\r\n                        <Col key={index}>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Card.Title>{post.sub}</Card.Title>\r\n                                    <Card.Text>\r\n                                        {post.desc}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                <Card.Footer>\r\n                                    <small className=\"text-muted\"> Created By - {post.crtdBy}</small>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n\r\n\r\n            </div>\r\n\r\n        </div>);\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Dashboard.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\NewHeader.js",["147"],[],"import {Modal, Nav, Navbar} from \"react-bootstrap\";\r\nimport logo from \"../project-images/nwmsu-logo.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Signup from \"../project-ui/Signup\";\r\nimport Login from \"../project-ui/Login\";\r\nimport React, {useState} from \"react\";\r\nimport SearchComponent from \"./search/SearchComponent\";\r\n\r\nconst NewHeader = () => {\r\n\r\n    const [sign, setSign] = useState(false);\r\n    const [login, setLogin] = useState(false);\r\n    const [search, setSearch] = useState(false),\r\n\r\n    onOpenSignup = () => {\r\n        setSign(true)\r\n    },\r\n\r\n    onOpenLogin = () => {\r\n        setLogin(true)\r\n    },\r\n\r\n    onOpenSearch = () => {\r\n        setSearch(true)\r\n    },\r\n\r\n    onCloseSignup = () => {\r\n        setSign(false)\r\n    },\r\n\r\n    onCloseLogin = () => {\r\n        setLogin(false)\r\n    },\r\n\r\n    onCloseSearch = () => {\r\n        setSearch(false)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" style={{height: 80}}>\r\n                <Navbar.Brand href=\"/\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        width=\"200\"\r\n                        height=\"65\"\r\n                        className=\"d-inline-block align-content-between\"\r\n                    />{' '}\r\n                    <span className=\"font-weight-bold\">Project Explorer</span>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle/>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link className=\"m-2\" onClick={onOpenSearch}>\r\n                        <i className=\"fa fa-search nwthemecolor\"></i>\r\n                        {'  '}Search</Nav.Link>\r\n                    <Nav.Link className=\"m-2\" onClick={onOpenLogin}>Login</Nav.Link>\r\n                    <Nav.Link className=\"m-2\" onClick={onOpenSignup}>Signup</Nav.Link>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Modal  centered=\"true\" size=\"lg\" show={sign} onHide={onCloseSignup}>\r\n                <Signup></Signup>\r\n            </Modal>\r\n\r\n            <Modal  centered=\"true\" size=\"lg\" show={login} onHide={onCloseLogin}>\r\n                <Login></Login>\r\n            </Modal>\r\n            <Modal size=\"lg\" show={search} onHide={onCloseSearch}>\r\n                <SearchComponent></SearchComponent>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default NewHeader;\r\n\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\PostProjectModal.js",["148"],[],"import {Button, Modal} from \"react-bootstrap\";\r\nimport PostProjectForm from \"./PostProjectForm\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nconst GenericModal = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                        props.type === 'postProject' ? <PostProjectForm close={props.onHide}></PostProjectForm>\r\n                            : <ProfileForm close={props.onHide}></ProfileForm>\r\n                    }\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GenericModal;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\Grid.js",["149"],[],"import {Button, Table} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport XHRUtil from \"./XHRUtil\";\r\n\r\nconst Grid = (props) => {\r\n\r\n    const fetchProjects = async (projectId, actionTaken) => {\r\n        try {\r\n            const response = await fetch(`/project/update/${projectId}/${actionTaken}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                alert(`${data?.status} ` + data.title)\r\n                props.fetchProjects();\r\n            } else {\r\n                console.error('Error fetching data:', response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n\r\n    let data = [{\r\n        title: 'Test',\r\n        description: 'Test',\r\n        createdBy: '',\r\n        privacy: 'public',\r\n        contactNumber: '',\r\n        technologyUsed: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        status: ''\r\n    }];\r\n\r\n    useEffect(() => {\r\n        if(props.showAction === 'true') {\r\n            initialheaders.push('Action');\r\n            setHeaders(initialheaders)\r\n        }\r\n    }, []);\r\n\r\n    const onEdit = (e)=> {\r\n        console.log(e);\r\n        fetchProjects(e.target?.parentElement?.parentElement.id, e?.target?.title)\r\n    }\r\n    const initialheaders = ['#','Title', 'Description','Created By', 'Privacy', 'Contact Number', 'Tech Used', 'Start Date', 'End Date', 'Status']\r\n    const [headers, setHeaders] = useState(initialheaders);\r\n\r\n    const dates = ['startDate', 'endDate'];\r\n\r\n    const keys = Object.keys(data[0]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Table hover responsive>\r\n\r\n                <thead>\r\n                <tr>\r\n\r\n                    {\r\n                        headers.map((key, index) => (\r\n                            <th key={index}> {key}</th>\r\n                        ))\r\n                    }\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                {\r\n                    props.data.map((project, trIndex) => (\r\n                        <tr key={trIndex}>\r\n                            <td>{trIndex + 1}</td>\r\n                            {\r\n                                keys.map((key, tdIndex) => (\r\n                                    <td key={tdIndex}> { dates.includes(key) ? XHRUtil.convertDate(project[key]) :project[key]}</td>\r\n\r\n                                ))\r\n                            }\r\n                            <td hidden={!(props.showAction === 'true')} id={project.projectId}>\r\n                                <Button onClick={onEdit} name=\"Approved\" variant=\"link\" className=\"text-success\"><i title=\"Approved\" className=\"fa fa-check fa-2x\"></i></Button>\r\n                                <Button onClick={onEdit} name = \"Rejected\" variant=\"link\" className=\"text-danger\"  ><i  title= \"Rejected\" className=\"fa fa-close fa-2x\"></i></Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Signup.js",["150"],[],"import React, { useState } from \"react\";\r\nimport '../project-css/signup.css';\r\n\r\nconst Signup = () => {\r\n    const initialFormData = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        mobile: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        agreeToTerms: false,\r\n    };\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [error, setError] = useState('');\r\n    const [serverResponse, setServerResponse] = useState(null);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const newValue = type === 'checkbox' ? checked : value;\r\n\r\n        setFormData((formData) => ({\r\n            ...formData,\r\n            [name]: newValue,\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const errors = {};\r\n\r\n        // Validation functions\r\n        function isValidEmail(email) {\r\n            const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            return emailPattern.test(email);\r\n        }\r\n\r\n        function isValidPassword(password) {\r\n            return password.length >= 8;\r\n        }\r\n\r\n        // Validate the First Name  field (non-empty)\r\n        if (formData.firstName.trim() === '' || formData.lastName.trim() === '') {\r\n            errors.firstName = 'Required First and Last Name.';\r\n        }\r\n\r\n        // Validate the Email field\r\n        if (!isValidEmail(formData.email)) {\r\n            errors.email = 'Please enter a valid email address.';\r\n        }\r\n\r\n        // Validate the Password field\r\n        if (!isValidPassword(formData.password)) {\r\n            errors.password = 'Password must be at least 8 characters.';\r\n        }\r\n\r\n        // Validate the Confirm Password field\r\n        if (formData.password !== formData.confirm_password) {\r\n            errors.confirm_password = 'Passwords do not match.';\r\n        }\r\n\r\n        // Validate the Mobile field (you can add more specific validation if needed)\r\n        if (formData.mobile.trim() === '') {\r\n            errors.mobile = 'Required Mobile Number.';\r\n        }\r\n\r\n        // Validate the Terms and Conditions checkbox\r\n        if (!formData.agreeToTerms) {\r\n            errors.agreeToTerms = 'You must agree to the Terms and Conditions.';\r\n        }\r\n\r\n        setFormErrors(errors);\r\n\r\n        // Return true if there are no errors, indicating the form is valid\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleServerResponse = (message) => {\r\n        setServerResponse(message);\r\n        setTimeout(() => {\r\n            setServerResponse(null);\r\n        }, 5000); // Adjust the timeout duration as needed (5 seconds in this example)\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isSubmitting) {\r\n            // Do nothing if the form is already submitting\r\n            return;\r\n        }\r\n\r\n        if (validateForm()) {\r\n            setIsSubmitting(true); // Set isSubmitting to true when the form is submitted\r\n            // Combine firstName and lastName into a single name field\r\n            const name = `${formData.firstName}${formData.lastName ? ` ${formData.lastName}` : ''}`;\r\n\r\n            try {\r\n                const response = await fetch(`/user/new`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: name,\r\n                        firstName: formData.firstName,\r\n                        lastName: formData.lastName,\r\n                        email: formData.email,\r\n                        password: formData.password,\r\n                        mobile: formData.mobile,\r\n                        roles: '', // You can adjust this as needed\r\n                    }),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    setIsSubmitted(true);\r\n                } else {\r\n                    if (response.status === 400) {\r\n                        const data = await response.json();\r\n                        setError(data.error);\r\n                    } else if(response.status === 302){\r\n                        setError('User already exists.');\r\n                    }else{\r\n                        setError('An error occurred while registering. Please try again later.');\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error registering user:', error);\r\n                setError('An error occurred while registering. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <div className=\"modal-body\">\r\n                <h2>Sign up now<span> Free!</span></h2>\r\n                {isSubmitted ? (\r\n                    <div className=\"success-message\">\r\n                        <p>Thank you for signing up!</p>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        {error && <p className=\"error text-danger\">{error}</p>}\r\n                        {serverResponse && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {serverResponse}\r\n                            </div>\r\n                        )}\r\n                        <form className=\"contact-form form-validate3\" id=\"user-signup-form\" noValidate=\"novalidate\" onSubmit={handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group form-outline\">\r\n                                        <label className=\"text-black-200 h6 font-weight-600 mb-2\" htmlFor=\"firstName\">First Name *</label>\r\n                                        <input className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"firstName\"\r\n                                            id=\"firstName\"\r\n                                            value={formData.firstName}\r\n                                            onChange={handleChange}\r\n                                            placeholder=\"First Name\"\r\n                                            required=\"\"\r\n                                            autoComplete=\"off\"\r\n                                            aria-required=\"true\" />\r\n                                        {formErrors.firstName && <p className=\"error text-danger\">{formErrors.firstName}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group form-outline\">\r\n                                        <label className=\"text-black-200 h6 font-weight-600 mb-2\" htmlFor=\"lastName\">Last Name *</label>\r\n                                        <input className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"lastName\"\r\n                                            id=\"lastName\"\r\n                                            value={formData.lastName}\r\n                                            onChange={handleChange}\r\n                                            placeholder=\"Last Name\"\r\n                                            required=\"\"\r\n                                            autoComplete=\"off\"\r\n                                            aria-required=\"true\" />\r\n                                        {formErrors.lastName && <p className=\"error text-danger\">{formErrors.lastName}</p>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-black-200 h6 font-weight-600 mb-2\" htmlFor=\"email\">Email Address*</label>\r\n                                <input className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"E-mail\"\r\n                                    required=\"\"\r\n                                    autoComplete=\"off\"\r\n                                    aria-required=\"true\" />\r\n                                {formErrors.email && <p className=\"error text-danger\">{formErrors.email}</p>}\r\n                            </div>\r\n                            <div className=\"row my-3\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-black-200 h6 font-weight-600 mb-2\" htmlFor=\"password\">Password*</label>\r\n                                        <input type=\"password\"\r\n                                            name=\"password\"\r\n                                            className=\"form-control\"\r\n                                            value={formData.password}\r\n                                            onChange={handleChange}\r\n                                            placeholder=\"Password\"\r\n                                            required=\"\"\r\n                                            autoComplete=\"off\"\r\n                                            aria-required=\"true\" />\r\n                                        {formErrors.password && <p className=\"error text-danger\">{formErrors.password}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-black-200 h6 font-weight-600 mb-2\" htmlFor=\"confirm_password\">Confirm Password*</label>\r\n                                        <input type=\"password\"\r\n                                            name=\"confirm_password\"\r\n                                            className=\"form-control\"\r\n                                            value={formData.confirm_password}\r\n                                            onChange={handleChange}\r\n                                            placeholder=\"Confirm Password\"\r\n                                            required=\"\"\r\n                                            autoComplete=\"off\"\r\n                                            aria-required=\"true\" />\r\n                                        {formErrors.confirm_password && <p className=\"error text-danger\">{formErrors.confirm_password}</p>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-black-200 h6 font-weight-600 mb-2\" htmlFor=\"mobile\">Mobile*</label>\r\n                                <input type=\"tel\"\r\n                                    name=\"mobile\"\r\n                                    className=\"form-control\"\r\n                                    value={formData.mobile}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Mobile\"\r\n                                    required=\"\"\r\n                                    autoComplete=\"off\"\r\n                                    aria-required=\"true\" />\r\n                                {formErrors.mobile && <p className=\"error text-danger\">{formErrors.mobile}</p>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"checkbox-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        name=\"agreeToTerms\"\r\n                                        checked={formData.agreeToTerms}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                    />\r\n                                    I agree to the <a href=\"/TermsAndConditions\">Terms and Conditions</a>\r\n                                </label>\r\n                                {formErrors.agreeToTerms && <p className=\"error text-danger\">{formErrors.agreeToTerms}</p>}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" value=\"signup\" id=\"signupBTN\" disabled={isSubmitting}>\r\n                                    {isSubmitting ? 'Signing Up...' : 'Sign up'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Login.js",["151","152","153","154"],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\PostProjectForm.js",["155","156","157"],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\ProfileForm.js",["158","159","160","161","162","163","164","165","166","167","168"],[],"import {Button, Col, Container, Form, Image, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport logo from '../project-images/user.png';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport ProjectCard from \"../components/project/ProjectCard\";\r\nimport Grid from \"../components/Grid\";\r\n\r\nconst ProfileForm = (props) => {\r\n\r\n    const initialFormData = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        mobile: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    useEffect(() => {\r\n        setAdminFlag();\r\n        fetchProjects();\r\n        fetchProfile();\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const fetchProfile = async () => {\r\n        try {\r\n            const response = await fetch(`/user/fetch`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data)\r\n                setFormData(data);\r\n            } else {\r\n                console.error('Error fetching data:', response.statusText);\r\n                navigate('/')\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value, type, checked} = e.target;\r\n        const newValue = type === 'checkbox' ? checked : value;\r\n\r\n        setFormData((formData) => ({\r\n            ...formData,\r\n            [name]: newValue,\r\n        }));\r\n    };\r\n\r\n    const [showProjectModal, setShowProjectModal] = useState(false);\r\n\r\n    const [showProfile, setShowProfile] = useState(false);\r\n\r\n    const [projects, setProjects] = useState([]);\r\n\r\n\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const [key, setKey] = useState('myProjects');\r\n\r\n\r\n    const setAdminFlag = function () {\r\n        setIsAdmin(localStorage.getItem('isAdmin') === 'true');\r\n    };\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const response = await fetch(`/project/getProjectsByName?username=${localStorage.getItem('username')}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data)\r\n                setProjects(data);\r\n            } else {\r\n                console.error('Error fetching data:', response.statusText);\r\n                navigate('/')\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n    /*noValidate validated={validated} onSubmit={handleSubmit}*/\r\n\r\n    return (\r\n        <Container className=\"m-3\">\r\n            <h4 className=\"text-center nwthemecolor p-2\">{formData.firstName.toUpperCase()}</h4>\r\n            <Row>\r\n                <Container className=\"col-md-6\">\r\n                    <h5 className=\"nwthemecolor text-center\"> My Projects</h5>\r\n                    <div className=\"p-5 scrollScreen\">\r\n\r\n                        <ProjectCard count={1} projects={projects}> </ProjectCard>\r\n                    </div>\r\n                </Container>\r\n                <Container className=\"col-md-6\">\r\n                    <Form>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col xs={6} md={4}>\r\n                                <Image src={logo} width={\"120px\"} height={\"120px\"} roundedCircle/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col} controlId=\"firstName\">\r\n                                <Form.Label className=\"font-weight-bold\">First Name</Form.Label>\r\n                                <Form.Control readOnly type=\"text\" placeholder=\"First Name\" name=\"firstName\" required\r\n                                              value={formData.firstName} onChange={handleChange}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Mandatory\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"lastName\">\r\n                                <Form.Label className=\"font-weight-bold\">Last Name</Form.Label>\r\n                                <Form.Control readOnly type=\"text\" placeholder=\"Last Name\" name=\"lastName\" required\r\n                                              value={formData.lastName}\r\n                                              onChange={handleChange}/>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Mandatory\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label className=\"font-weight-bold\">Email</Form.Label>\r\n                            <Form.Control plaintext readOnly type=\"email\" placeholder=\"Email\" required\r\n                                          value={formData.email} name=\"email\"\r\n                                          onChange={handleChange}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Mandatory\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"contactNumber\">\r\n                            <Form.Label className=\"font-weight-bold\">Contact Number</Form.Label>\r\n                            <Form.Control readOnly type=\"tel\" minLength=\"10\" maxLength=\"10\" name=\"mobile\"\r\n                                          placeholder=\"Contact Number\"\r\n                                          required value={formData.mobile} onChange={handleChange}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Mandatory\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"d-flex justify-content-end\">\r\n                            <Button className=\"m-4\" variant=\"danger\" onClick={props.close}>Close</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileForm\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\ToastMsg.js",[],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\DashboardLanding.js",["169","170","171","172","173","174","175","176"],[],"import {Badge, Button, Container, ListGroup, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport ProjectCard from \"../components/project/ProjectCard\";\r\nimport Grid from \"../components/Grid\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport GenericModal from \"./PostProjectModal\";\r\n\r\nconst DashboardLanding = () => {\r\n    const [showProjectModal, setShowProjectModal] = useState(false);\r\n\r\n    const [projects, setProjects] = useState([]);\r\n\r\n\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setAdminFlag();\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    const navigate = useNavigate(),\r\n\r\n        setAdminFlag = function () {\r\n            setIsAdmin(localStorage.getItem('isAdmin') === 'true');\r\n        };\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const response = await fetch(`/project/getProjectsByName?username=`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data)\r\n                setProjects(data);\r\n            } else {\r\n                console.error('Error fetching data:', response.statusText);\r\n                navigate('/')\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n    return (\r\n        <Row>\r\n            <Container className=\"col-md-9\">\r\n                <h4 className=\"nwthemecolor pt-4\"> Projects you might be interested in </h4>\r\n                <div className=\"p-3 scrollScreen\">\r\n                    <ProjectCard count={1} projects={projects}> </ProjectCard>\r\n                </div>\r\n            </Container>\r\n            <Container className=\"col-md-3\">\r\n                <Container className=\"pt-5\">\r\n                    <h6 className=\"nwthemecolor\"><i className=\"fa fa-angle-double-up fa-lg\"></i>Trending Projects</h6>\r\n                    <ListGroup as=\"ol\">\r\n                        {\r\n                            projects.slice(0, 4).map((project) => (\r\n                                <ListGroup.Item\r\n                                    as=\"li\"\r\n                                    className=\"d-flex justify-content-between align-items-start\"\r\n                                >\r\n                                    <div className=\"ms-2 me-auto\">\r\n                                        <div className=\"fw-bold\">{project.title}</div>\r\n                                        {project.description}\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n\r\n                    </ListGroup>\r\n                </Container>\r\n                <Container className=\"pt-3\">\r\n                    <h6 className=\"nwthemecolor\"><i className=\"fa fa-fighter-jet fa-lg\"></i> Top Projects</h6>\r\n                    <ListGroup as=\"ol\">\r\n                        {\r\n                            projects.slice(Math.max(projects.length - 4, 0)).map((project) => (\r\n                                <ListGroup.Item\r\n                                    as=\"li\"\r\n                                    className=\"d-flex justify-content-between align-items-start\"\r\n                                >\r\n                                    <div className=\"ms-2 me-auto\">\r\n                                        <div className=\"fw-bold\">{project.title}</div>\r\n                                        {project.description}\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n\r\n                    </ListGroup>\r\n                </Container>\r\n            </Container>\r\n            <GenericModal show={showProjectModal} type='postProject' title=\"Post Project\"\r\n                          onHide={() => setShowProjectModal(false)}></GenericModal>\r\n        </Row>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default DashboardLanding\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\admin\\AdminDashbboard.js",["177"],[],"import {Container, Tab, Tabs} from \"react-bootstrap\";\r\nimport ProjectCard from \"../project/ProjectCard\";\r\nimport Grid from \"../Grid\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const response = await fetch(`/project/getProjectsByName?username=`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data)\r\n                setProjects(data);\r\n            } else {\r\n                console.error('Error fetching data:', response.statusText);\r\n                navigate('/')\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Tabs id=\"uncontrolled-tab-example\" justify>\r\n                <Tab eventKey=\"myProjects\" title={ \"User Projects\"}>\r\n                    <div className=\"p-5\">\r\n                        <ProjectCard projects={projects}> </ProjectCard>\r\n                    </div>\r\n                </Tab>\r\n                <Tab eventKey=\"pending\" title=\"Pending for Approval\">\r\n                    <div className=\"p-5\">\r\n                        <Grid showAction=\"true\" fetchProjects={fetchProjects}\r\n                              data={projects.filter(project => project.status === 'Pending')}></Grid>\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\Categories.js",[],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\XHRUtil.js",[],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\search\\SearchComponent.js",["178"],[],"import {Badge, Form, InputGroup, ListGroup} from \"react-bootstrap\";\r\nimport XHRUtil from \"../XHRUtil\";\r\nimport React, { useState} from \"react\";\r\n\r\nconst SearchComponent = (props) => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n   const  handleChange =  (e) => {\r\n       const {name, value} = e.target;\r\n        if(value.length > 0) {\r\n            let request = XHRUtil.getDataFromApiWithoutAuth(`/project/searchProjects?title=${value}`);\r\n\r\n            request.then((res) => {\r\n                setData(res);\r\n            });\r\n        } else if(value === \"\") {\r\n            setData([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3\">\r\n            <h3 className=\"text-center nwthemecolor\"> Search Projects </h3>\r\n            <InputGroup className=\"mb-3\" size=\"lg\">\r\n                <Form.Control\r\n                    type=\"text\" onChange={handleChange} />\r\n                <InputGroup.Text><i className=\"fa fa-search nwthemecolor\"></i></InputGroup.Text>\r\n            </InputGroup>\r\n            <ListGroup as=\"ol\">\r\n                {\r\n                    data?.map((project) => (\r\n                        <ListGroup.Item action variant=\"light\"\r\n                            as=\"li\"\r\n                            className=\"d-flex justify-content-between align-items-start\"\r\n                        >\r\n                            <div className=\"ms-2 me-auto\">\r\n                                <div className=\"fw-bold\">{project.title}</div>\r\n                                {project.description}\r\n                            </div>\r\n                            {\r\n                                project?.categories?.map((tech,badgeIndex) => (\r\n                                <Badge key={'badge-' + badgeIndex} pill bg=\"success\">{tech}</Badge>\r\n                                ))\r\n                            }\r\n                        </ListGroup.Item>\r\n                    ))\r\n                }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SearchComponent;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\project\\ProjectCard.js",[],[],"C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\components\\project\\Comments.js",["179","180"],[],"import {Badge, Button, Card, Col, FloatingLabel, Form, Offcanvas, Row} from \"react-bootstrap\";\r\nimport XHRUtil from \"../XHRUtil\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst CommentProject = (props) => {\r\n\r\n    let onExitCanvas= () =>{\r\n        setFormData(commentData)\r\n        setAllComments([]);\r\n    };\r\n\r\n\r\n    let onEnterCanvas = () =>{\r\n        console.log(props.projectdataid)\r\n\r\n        let getAllCommentsById = XHRUtil.getDataFromApi(`/comment/getComments/${props.projectdataid}`);\r\n        getAllCommentsById.then((result) => {\r\n            setAllComments(result);\r\n        })\r\n\r\n    }\r\n\r\n    const commentData = {\r\n       comment: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(commentData);\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [allComments, setAllComments] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        const form = event.currentTarget;\r\n\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n            setValidated(true);\r\n        }\r\n\r\n        console.log(formData)\r\n\r\n        if(form.checkValidity()) {\r\n            formData.projectId = props.projectdataid;\r\n            let postComment = XHRUtil.postDataToApi(`/comment/add`,formData);\r\n            postComment.then(() =>{\r\n                alert(\"Posted Comment\");\r\n                onEnterCanvas();\r\n                setFormData(commentData)\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Offcanvas {...props} placement=\"end\" onExit = {onExitCanvas} onShow = {onEnterCanvas}>\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title> <i className=\"fa fa-comment-o fa-lg text-success\"></i> Share your thoughts </Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\">\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                placeholder=\"Leave a comment here\"\r\n                                value={formData.comment}\r\n                                onChange={handleChange}\r\n                                name= \"comment\"\r\n                                style={{height: '100px'}} maxLength={250} required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter comment\r\n                            </Form.Control.Feedback>\r\n                        </FloatingLabel>\r\n                        <div className=\"d-flex mt-3 justify-content-end\" >\r\n                            <Button type={\"submit\"} variant={\"success\"}> Post\r\n                                Comment</Button>\r\n                        </div>\r\n                        <h6 className=\"mt-5\"> Most Recent Comments  ({allComments?.length || 0}) </h6>\r\n                        <hr/>\r\n                        <Row className=\"g-4\">\r\n                            {allComments?.map((comment, index) => (\r\n                                <Col key={index}>\r\n                                    <Card border={\"success\"}>\r\n\r\n                                        <Card.Body>\r\n                                            <Card.Title>{comment.emailId}</Card.Title>\r\n                                            <Card.Text>\r\n                                                {comment.comment}\r\n\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                        <Card.Footer>\r\n                                            <small\r\n                                                className=\"text-muted\">{XHRUtil.convertDate(comment.commentedDate) }</small>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Form>\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CommentProject;\r\n","C:\\Users\\S554992\\Documents\\webapps-repos\\reactui\\src\\project-ui\\ScrollToTop.js",[],[],{"ruleId":"181","severity":1,"message":"182","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":19},{"ruleId":"181","severity":1,"message":"185","line":12,"column":25,"nodeType":"183","messageId":"184","endLine":12,"endColumn":39},{"ruleId":"181","severity":1,"message":"186","line":13,"column":12,"nodeType":"183","messageId":"184","endLine":13,"endColumn":29},{"ruleId":"181","severity":1,"message":"187","line":13,"column":31,"nodeType":"183","messageId":"184","endLine":13,"endColumn":51},{"ruleId":"181","severity":1,"message":"188","line":14,"column":12,"nodeType":"183","messageId":"184","endLine":14,"endColumn":24},{"ruleId":"181","severity":1,"message":"189","line":14,"column":26,"nodeType":"183","messageId":"184","endLine":14,"endColumn":41},{"ruleId":"181","severity":1,"message":"190","line":45,"column":11,"nodeType":"183","messageId":"184","endLine":45,"endColumn":19},{"ruleId":"181","severity":1,"message":"191","line":51,"column":11,"nodeType":"183","messageId":"184","endLine":51,"endColumn":19},{"ruleId":"181","severity":1,"message":"192","line":57,"column":11,"nodeType":"183","messageId":"184","endLine":57,"endColumn":19},{"ruleId":"181","severity":1,"message":"193","line":63,"column":11,"nodeType":"183","messageId":"184","endLine":63,"endColumn":21},{"ruleId":"181","severity":1,"message":"194","line":70,"column":11,"nodeType":"183","messageId":"184","endLine":70,"endColumn":23},{"ruleId":"181","severity":1,"message":"195","line":78,"column":11,"nodeType":"183","messageId":"184","endLine":78,"endColumn":24},{"ruleId":"181","severity":1,"message":"196","line":84,"column":11,"nodeType":"183","messageId":"184","endLine":84,"endColumn":22},{"ruleId":"181","severity":1,"message":"197","line":2,"column":5,"nodeType":"183","messageId":"184","endLine":2,"endColumn":10},{"ruleId":"181","severity":1,"message":"198","line":3,"column":5,"nodeType":"183","messageId":"184","endLine":3,"endColumn":11},{"ruleId":"181","severity":1,"message":"199","line":4,"column":5,"nodeType":"183","messageId":"184","endLine":4,"endColumn":9},{"ruleId":"181","severity":1,"message":"200","line":5,"column":5,"nodeType":"183","messageId":"184","endLine":5,"endColumn":8},{"ruleId":"181","severity":1,"message":"201","line":11,"column":5,"nodeType":"183","messageId":"184","endLine":11,"endColumn":12},{"ruleId":"181","severity":1,"message":"202","line":12,"column":5,"nodeType":"183","messageId":"184","endLine":12,"endColumn":8},{"ruleId":"181","severity":1,"message":"203","line":13,"column":5,"nodeType":"183","messageId":"184","endLine":13,"endColumn":8},{"ruleId":"181","severity":1,"message":"204","line":14,"column":5,"nodeType":"183","messageId":"184","endLine":14,"endColumn":9},{"ruleId":"181","severity":1,"message":"205","line":18,"column":8,"nodeType":"183","messageId":"184","endLine":18,"endColumn":12},{"ruleId":"181","severity":1,"message":"206","line":22,"column":8,"nodeType":"183","messageId":"184","endLine":22,"endColumn":15},{"ruleId":"181","severity":1,"message":"207","line":23,"column":8,"nodeType":"183","messageId":"184","endLine":23,"endColumn":19},{"ruleId":"181","severity":1,"message":"208","line":31,"column":12,"nodeType":"183","messageId":"184","endLine":31,"endColumn":20},{"ruleId":"181","severity":1,"message":"209","line":31,"column":22,"nodeType":"183","messageId":"184","endLine":31,"endColumn":33},{"ruleId":"181","severity":1,"message":"210","line":36,"column":12,"nodeType":"183","messageId":"184","endLine":36,"endColumn":15},{"ruleId":"181","severity":1,"message":"211","line":40,"column":11,"nodeType":"183","messageId":"184","endLine":40,"endColumn":23},{"ruleId":"181","severity":1,"message":"212","line":65,"column":11,"nodeType":"183","messageId":"184","endLine":65,"endColumn":19},{"ruleId":"181","severity":1,"message":"213","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"198","line":1,"column":9,"nodeType":"183","messageId":"184","endLine":1,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":46,"column":8,"nodeType":"216","endLine":46,"endColumn":10,"suggestions":"217"},{"ruleId":"181","severity":1,"message":"218","line":82,"column":11,"nodeType":"183","messageId":"184","endLine":82,"endColumn":31},{"ruleId":"181","severity":1,"message":"219","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":17},{"ruleId":"181","severity":1,"message":"220","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":23},{"ruleId":"181","severity":1,"message":"221","line":19,"column":9,"nodeType":"183","messageId":"184","endLine":19,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":151,"column":33,"nodeType":"224","endLine":151,"endColumn":78},{"ruleId":"181","severity":1,"message":"225","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"181","severity":1,"message":"226","line":4,"column":31,"nodeType":"183","messageId":"184","endLine":4,"endColumn":44},{"ruleId":"181","severity":1,"message":"227","line":19,"column":11,"nodeType":"183","messageId":"184","endLine":19,"endColumn":19},{"ruleId":"181","severity":1,"message":"203","line":1,"column":51,"nodeType":"183","messageId":"184","endLine":1,"endColumn":54},{"ruleId":"181","severity":1,"message":"204","line":1,"column":56,"nodeType":"183","messageId":"184","endLine":1,"endColumn":60},{"ruleId":"181","severity":1,"message":"205","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":23,"column":8,"nodeType":"216","endLine":23,"endColumn":10,"suggestions":"229"},{"ruleId":"181","severity":1,"message":"230","line":60,"column":12,"nodeType":"183","messageId":"184","endLine":60,"endColumn":28},{"ruleId":"181","severity":1,"message":"231","line":60,"column":30,"nodeType":"183","messageId":"184","endLine":60,"endColumn":49},{"ruleId":"181","severity":1,"message":"232","line":62,"column":12,"nodeType":"183","messageId":"184","endLine":62,"endColumn":23},{"ruleId":"181","severity":1,"message":"233","line":62,"column":25,"nodeType":"183","messageId":"184","endLine":62,"endColumn":39},{"ruleId":"181","severity":1,"message":"234","line":67,"column":12,"nodeType":"183","messageId":"184","endLine":67,"endColumn":19},{"ruleId":"181","severity":1,"message":"210","line":69,"column":12,"nodeType":"183","messageId":"184","endLine":69,"endColumn":15},{"ruleId":"181","severity":1,"message":"235","line":69,"column":17,"nodeType":"183","messageId":"184","endLine":69,"endColumn":23},{"ruleId":"181","severity":1,"message":"197","line":1,"column":9,"nodeType":"183","messageId":"184","endLine":1,"endColumn":14},{"ruleId":"181","severity":1,"message":"198","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":22},{"ruleId":"181","severity":1,"message":"203","line":1,"column":51,"nodeType":"183","messageId":"184","endLine":1,"endColumn":54},{"ruleId":"181","severity":1,"message":"204","line":1,"column":56,"nodeType":"183","messageId":"184","endLine":1,"endColumn":60},{"ruleId":"181","severity":1,"message":"205","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"236","line":5,"column":9,"nodeType":"183","messageId":"184","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"234","line":14,"column":12,"nodeType":"183","messageId":"184","endLine":14,"endColumn":19},{"ruleId":"214","severity":1,"message":"237","line":19,"column":8,"nodeType":"216","endLine":19,"endColumn":10,"suggestions":"238"},{"ruleId":"214","severity":1,"message":"237","line":13,"column":8,"nodeType":"216","endLine":13,"endColumn":10,"suggestions":"239"},{"ruleId":"181","severity":1,"message":"240","line":10,"column":15,"nodeType":"183","messageId":"184","endLine":10,"endColumn":19},{"ruleId":"181","severity":1,"message":"197","line":1,"column":9,"nodeType":"183","messageId":"184","endLine":1,"endColumn":14},{"ruleId":"181","severity":1,"message":"241","line":3,"column":16,"nodeType":"183","messageId":"184","endLine":3,"endColumn":25},"no-unused-vars","'ScrollToTop' is defined but never used.","Identifier","unusedVar","'setSearchQuery' is assigned a value but never used.","'showReadMorePopup' is assigned a value but never used.","'setShowReadMorePopup' is assigned a value but never used.","'selectedPost' is assigned a value but never used.","'setSelectedPost' is assigned a value but never used.","'prevPage' is assigned a value but never used.","'nextPage' is assigned a value but never used.","'goToPage' is assigned a value but never used.","'limitWords' is assigned a value but never used.","'limitLetters' is assigned a value but never used.","'filteredPosts' is assigned a value but never used.","'pageNumbers' is assigned a value but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'NavItem' is defined but never used.","'Row' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Grid' is defined but never used.","'XHRUtil' is defined but never used.","'ProjectCard' is defined but never used.","'projects' is assigned a value but never used.","'setProjects' is assigned a value but never used.","'key' is assigned a value but never used.","'setActiveTab' is assigned a value but never used.","'onLogout' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initialheaders' and 'props.showAction'. Either include them or remove the dependency array.","ArrayExpression",["242"],"'handleServerResponse' is assigned a value but never used.","'loginLogo' is defined but never used.","'SearchComponent' is defined but never used.","'onOpenSignup' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProfile' and 'fetchProjects'. Either include them or remove the dependency array.",["243"],"'showProjectModal' is assigned a value but never used.","'setShowProjectModal' is assigned a value but never used.","'showProfile' is assigned a value but never used.","'setShowProfile' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'setKey' is assigned a value but never used.","'NavLink' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.",["244"],["245"],"'name' is assigned a value but never used.","'useEffect' is defined but never used.",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},"Update the dependencies array to be: [initialheaders, props.showAction]",{"range":"253","text":"254"},"Update the dependencies array to be: [fetchProfile, fetchProjects]",{"range":"255","text":"256"},"Update the dependencies array to be: [fetchProjects]",{"range":"257","text":"258"},{"range":"259","text":"258"},[1401,1403],"[initialheaders, props.showAction]",[672,674],"[fetchProfile, fetchProjects]",[641,643],"[fetchProjects]",[378,380]]